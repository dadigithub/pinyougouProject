<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://code.alibabatech.com/schema/dubbo
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- 以下页面不被拦截 -->
	<http pattern="/*.html" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/js/**" security="none"></http>
	<http pattern="/plugins/**" security="none"></http>
	<!--放开/seller/add.do,使用户可以匿名访问,也就是商家入驻的服务,注册的那个功能 -->
	<http pattern="/seller/add.do" security="none"></http>

	<!-- 页面拦截规则 -->
	<!--页面的拦截规则 use-expressions:是否启动SPEL表达式 默认是true-->
	<http use-expressions="false">
		<!--当前用户必须有ROLE_USER的角色才可以访问根目录及所属子目录的资源-->
		<!--pattern=/** 表示拦截根目录及其子目录,因为html页面在admin文件夹下,所以配置/**-->
		<intercept-url pattern="/**" access="ROLE_SELLER" /><!--拦截地址-->
		<!--开启表单登陆功能-->	<!--login-page表示登陆页面 -->								            <!--失败跳转的页面-->		      <!--总是跳转到默认的页面-->											<!--指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL-->
		<form-login
				login-page="/shoplogin.html"
				default-target-url="/admin/index.html"
				authentication-failure-url="/shoplogin.html"
				always-use-default-target="true"
				login-processing-url="/login"
				username-parameter="username"
				password-parameter="password"

		/>
		<!--关闭csrf,不进行token值-->
		<csrf disabled="true"/>
		<!--在系统中使用了框架页，需要设置框架页的策略为 SAMEORIGIN-->
		<!--iframe标签的使用需要在spring security配置文件中声明-->
		<headers>
			<frame-options policy="SAMEORIGIN"/>
		</headers>
		<!--退出设置-->
		<logout/>

	</http>




	<!--认证管理器-->
	<authentication-manager>		<!--引用认证类实现类-->
		<authentication-provider user-service-ref="userDetailService">
			<!--配置密码加密--> <!--当配置了这个之后,之前的明文密码就无法登陆使用了-->
			<password-encoder ref="bcryptEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!--认证的实现类-->
	<beans:bean id="userDetailService" class="com.pinyougou.service.UserDetailsServiceImpl" >
		<beans:property name="sellerService" ref="sellerService"></beans:property>
	</beans:bean>

	<!-- 引用dubbo 服务 -->
	<dubbo:application name="pinyougou_shop_security" />
	<dubbo:registry address="zookeeper://192.168.25.153:2181"/>
	<!--这里不太懂??????--><!--这是配置扫描一个方法,与pacakage扫描相对,pacakage扫描是扫描一个文件夹-->
	<dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference>

	<!--密码加密工类-->
	<beans:bean id="bcryptEncoder"  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />


</beans:beans>